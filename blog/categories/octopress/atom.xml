<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | 割り箸ポテチ]]></title>
  <link href="http://blog.chopschips.net/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://blog.chopschips.net/"/>
  <updated>2015-02-27T01:04:49+09:00</updated>
  <id>http://blog.chopschips.net/</id>
  <author>
    <name><![CDATA[Kawahara Taisuke / 河原太介]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopressで見出しの目次を作る方法 改]]></title>
    <link href="http://blog.chopschips.net/blog/2014/07/08/octopress-toc-improved/"/>
    <updated>2014-07-08T01:30:43+09:00</updated>
    <id>http://blog.chopschips.net/blog/2014/07/08/octopress-toc-improved</id>
    <content type="html"><![CDATA[<p>以前このような記事を書きました。</p>

<p><a href="http://blog.chopschips.net/blog/2014/06/16/octopress-toc/">Octopressで見出しの目次を作る方法 &ndash; 割り箸ポテチ</a></p>

<p>この記事を読まれた方から、より良い方法を教えて頂きました。</p>

<p><a href="http://qiita.com/syui/items/564d1517fb1511c7069e">Octopressで見出しタグを目次にする方法 &ndash; Qiita</a></p>

<p><a href="https://github.com/dafi/jekyll-toc-generator">jekyll-toc-generator</a>というjekyllのプラグインを修正して使う方法です。
修正する理由は下記で解説されています。
<a href="http://syui.github.io/blog/2014/07/07/github-content-plugin/">jekyll-toc-generatorを個別ページで表示する場合の問題点 &ndash; MBA-HACK2</a></p>

<p>rdiscountの見出し作成機能を使わず、フィルタで本文をパースして見出しを構成してしまうというアプローチでした。
勉強になりました。その手があったか。</p>

<p>で、試してみたところ概ね自分の望むとおりに動いていました。素晴らしいです。</p>

<p>ただ一点だけ、<code>&lt;!-- more --&gt;</code>と<code>excerpt</code>で後半を省略する場合に、
カレントページへのアンカーのままだとリンク先が省略されて意図した動作をしなくなるので、
オプションで絶対パスを指定できるようにして使うことにしました。(あとatomに載った場合も困る)</p>

<p>修正した後のコードは下記です。</p>

<!-- more -->


<p><a href="https://github.com/KawaharaTaisuke/jekyll-toc-generator/commit/18fbd3be566304a566bb2209b3189262a2bf892a">https://github.com/KawaharaTaisuke/jekyll-toc-generator/commit/18fbd3be566304a566bb2209b3189262a2bf892a</a></p>

<p><code>page_url</code>オプションでページの絶対パスを指定できます。
<code>source/_includes/article.html</code>の修正例は下記の通り。</p>

<p>```</p>

<a name="source._includes.article.html"></a>
<h1>source/_includes/article.html</h1>

<a name="L.snip."></a>
<h1>(snip)</h1>

<p>
{% if index %}
  <div class="entry-content">{{ content | toc_generate page_url: post.url | excerpt }}</div>
  {% capture excerpted %}{{ content | has_excerpt }}{% endcapture %}
  {% if excerpted == &lsquo;true&rsquo; %}</p>

<pre><code>&lt;footer&gt;
  &lt;a rel="full-article" href="{{ root_url }}{{ post.url }}"&gt;{{ site.excerpt_link }}&lt;/a&gt;
&lt;/footer&gt;
</code></pre>

<p>  {% endif %}
{% else %}</p>

<div class="entry-content">{{ content | toc_generate page_url: post.url }}</div>


<p>{% endif %}

```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressで見出しの目次を作る方法]]></title>
    <link href="http://blog.chopschips.net/blog/2014/06/16/octopress-toc/"/>
    <updated>2014-06-16T22:00:01+09:00</updated>
    <id>http://blog.chopschips.net/blog/2014/06/16/octopress-toc</id>
    <content type="html"><![CDATA[<p>調べて見つかった方法だとうまく行かなかったので、少し筋の悪い方法ですが自分で考えた方法をメモしておきます。</p>

<p>最終的には、この記事に出ているような見出しの目次を作ることができました。この方法の特徴は下記の通りです。</p>

<ol>
<li>日本語の見出しでもエラーにならず出力される。</li>
<li>OctopressデフォルトのMarkdownパーサであるrdiscountを使用している。</li>
<li>リンクが絶対パスになる(記事一覧画面のような「続きを読む(Read On)」で目次のリンク先が省略されるような状況でも有効なリンクになる)</li>
<li>リンクが重複しない(後述)</li>
</ol>


<p>前半はアプローチのメモです。実現方法は解決案以降に書いています。</p>

<!-- more -->


<a name="L............"></a>
<h1>前提条件</h1>

<ol>
<li><a href="https://github.com/imathis/octopress/commit/9bc4bb02ee3318d07b6b1ecd838a09461eff627b">2014-05-22のコミット</a> 以降のoctopressをcloneしていること。</li>
<li>Markdownパーサとして<a href="https://github.com/davidfstr/rdiscount">rdiscount</a>を使用していること。</li>
</ol>


<a name="L..............................................................."></a>
<h1>目次のサンプルと見出しの生成に失敗するまで</h1>

<p>gemはvendor/bundle以下にインストールしてあると仮定します。</p>

<p><code>bash
$ git clone git://github.com/imathis/octopress.git octopress
$ bundle install --path=vendor/bundle
$ bundle exec rake install
</code></p>

<p>見出し機能を有効にします。</p>

<p>``` diff
diff &mdash;git <em>config.yml </em>config.yml
index e51e7c3..0969488 100644
&mdash;&ndash; <em>config.yml
+++ </em>config.yml
@@ -39,6 +39,8 @@ rdiscount:</p>

<pre><code> - autolink
 - footnotes
 - smart
</code></pre>

<ul>
<li><ul>
<li>generate_toc</li>
</ul>
</li>
<li>toc_token: &ldquo;{!TOC}&rdquo;
pygments: false # default python pygments have been replaced by pygments.rb</li>
</ul>


<p> paginate: 10          # Posts per page on the blog index
```</p>

<p>以下、投稿例です。</p>

<p>``` bash
$ bundle exec rake &lsquo;new_post[octopress_toc]&rsquo;
$ cat &lt;&lt;&lsquo;EOF&rsquo; > source/_posts/2014-06-16-octopress-toc.markdown
layout: post
title: &ldquo;octopress_toc&rdquo;
date: 2014-06-16 09:54:31 +0900
comments: true</p>

<a name="categories:"></a>
<h2>categories:</h2>

<p>{!TOC}</p>

<p>見出し目次のテストです。</p>

<!-- more -->


<a name="L............"></a>
<h1>見出し１</h1>

<p>本文</p>

<a name="L............"></a>
<h2>見出し２</h2>

<p>本文</p>

<a name="L............"></a>
<h2>見出し３</h2>

<p>本文
EOF
```</p>

<p>このままgenerateしようとするとエラーになります。</p>

<p>``` bash
$ bundle exec rake generate</p>

<a name="Generating.Site.with.Jekyll"></a>
<h2>Generating Site with Jekyll</h2>

<p>identical source/stylesheets/screen.css
Configuration from octopress/_config.yml
Building site: source &ndash;> public
octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/converters/markdown.rb:140:in `gsub!&lsquo;: incompatible character encodings: ASCII-8BIT and UTF-8 (Encoding::CompatibilityError)</p>

<pre><code>    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/converters/markdown.rb:140:in `convert'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/convertible.rb:46:in `transform'
    from octopress/plugins/post_filters.rb:150:in `transform'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/convertible.rb:88:in `do_layout'
    from octopress/plugins/post_filters.rb:167:in `do_layout'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/post.rb:195:in `render'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/site.rb:200:in `block in render'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `each'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `render'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/lib/jekyll/site.rb:41:in `process'
    from octopress/vendor/bundle/ruby/2.1.0/gems/jekyll-0.12.0/bin/jekyll:264:in `&lt;top (required)&gt;'
    from octopress/vendor/bundle/ruby/2.1.0/bin/jekyll:23:in `load'
    from octopress/vendor/bundle/ruby/2.1.0/bin/jekyll:23:in `&lt;main&gt;'
</code></pre>

<p>```</p>

<a name="L.................."></a>
<h1>既知のパッチ</h1>

<p>前述のエラーについてはパッチがあります。</p>

<p>参考：<a href="http://tokkonopapa.github.io/blog/2013/02/23/octopress-toc/">octopressで見出しの目次を記事に埋め込む方法 &ndash; T.I.D.</a></p>

<p>jekyll本体に手を入れることになるので、ローカルにチェックアウトします。</p>

<p><code>bash
$ mkdir vendor/github
$ git clone git@github.com:jekyll/jekyll -b v0.12.0 vendor/github/jekyll
</code></p>

<p>Gemfileを修正して、<code>bundle install --path=vendor/bundle</code>します。</p>

<p>``` diff
diff &mdash;git Gemfile Gemfile
index cd8ce57..c87d7ec 100644
&mdash;&ndash; Gemfile
+++ Gemfile
@@ -2,7 +2,7 @@ source &ldquo;<a href="https://rubygems.org">https://rubygems.org</a>&rdquo;</p>

<p> group :development do
   gem &lsquo;rake&rsquo;, &lsquo;~> 0.9&rsquo;
&ndash;  gem &lsquo;jekyll&rsquo;, &lsquo;~> 0.12&rsquo;
+  gem &lsquo;jekyll&rsquo;, :path => &ldquo;vendor/github/jekyll&rdquo;
   gem &lsquo;rdiscount&rsquo;, &lsquo;~> 2.0.7&rsquo;
   gem &lsquo;pygments.rb&rsquo;, &lsquo;~> 0.3.4&rsquo;
   gem &lsquo;RedCloth&rsquo;, &lsquo;~> 4.2.9&rsquo;
```</p>

<p>jekyllのコードを修正します。</p>

<p><code>bash
cd vendor/github/jekyll
</code>
``` diff
diff &mdash;git lib/jekyll/converters/markdown.rb lib/jekyll/converters/markdown.rb
index 3c6ba53..b866617 100644
&mdash;&ndash; lib/jekyll/converters/markdown.rb
+++ lib/jekyll/converters/markdown.rb
@@ -137,7 +137,7 @@ module Jekyll</p>

<pre><code>       rd = RDiscount.new(content, *@rdiscount_extensions)
       html = rd.to_html
       if rd.generate_toc and html.include?(@config['rdiscount']['toc_token'])
</code></pre>

<ul>
<li><pre><code>     html.gsub!(@config['rdiscount']['toc_token'], rd.toc_content)
</code></pre></li>
<li><pre><code>     html.gsub!(@config['rdiscount']['toc_token'], rd.toc_content.force_encoding("utf-8"))
   end
   html
 when 'maruku'
</code></pre>

<p>```</p></li>
</ul>


<p>もう一度generateしてみます。</p>

<p>``` bash
% bundle exec rake generate</p>

<a name="Generating.Site.with.Jekyll"></a>
<h2>Generating Site with Jekyll</h2>

<p>identical source/stylesheets/screen.css
Configuration from octopress/_config.yml
Building site: source &ndash;> public
octopress/plugins/raw.rb:11:in `gsub': invalid byte sequence in UTF-8 (ArgumentError)</p>

<pre><code>    from octopress/plugins/raw.rb:11:in `unwrap'
    from octopress/plugins/octopress_filters.rb:18:in `post_filter'
    from octopress/plugins/octopress_filters.rb:33:in `post_render'
    from octopress/plugins/post_filters.rb:124:in `block in post_render'
    from octopress/plugins/post_filters.rb:123:in `each'
    from octopress/plugins/post_filters.rb:123:in `post_render'
    from octopress/plugins/post_filters.rb:151:in `transform'
    from octopress/vendor/github/jekyll/lib/jekyll/convertible.rb:88:in `do_layout'
    from octopress/plugins/post_filters.rb:167:in `do_layout'
    from octopress/vendor/github/jekyll/lib/jekyll/post.rb:195:in `render'
    from octopress/vendor/github/jekyll/lib/jekyll/site.rb:200:in `block in render'
    from octopress/vendor/github/jekyll/lib/jekyll/site.rb:199:in `each'
    from octopress/vendor/github/jekyll/lib/jekyll/site.rb:199:in `render'
    from octopress/vendor/github/jekyll/lib/jekyll/site.rb:41:in `process'
    from octopress/vendor/github/jekyll/bin/jekyll:264:in `&lt;top (required)&gt;'
    from octopress/vendor/bundle/ruby/2.1.0/bin/jekyll:23:in `load'
    from octopress/vendor/bundle/ruby/2.1.0/bin/jekyll:23:in `&lt;main&gt;'
</code></pre>

<p>```</p>

<p>別のエラーが出ました。</p>

<a name="L............"></a>
<h1>次の一手</h1>

<p>いくつかの方法が考えられます。</p>

<ol>
<li>別のパーサを使う。(redcarpet, kramdown)</li>
<li>rdiscount, jekyllのバージョンを上げる。</li>
</ol>


<p>redcarpetについては別の問題が発生してうまく行きませんでした。
<a href="http://octopress.org">octopressのドキュメント</a>自体がredcarpetに移行しているみたいなので本命だったのですが諦めて別の方法を探しました。</p>

<p>kramdownはcodeblockの利用に制限がかかりそうだったので見送りました。</p>

<p>rdiscountとjekyllのバージョンをあげたら解決する可能性があるかと思ったのですが、両方ともmasterのHEADに持っていくだけではダメでした。
そもそもoctopressが使っているjekyllのバージョンはかなり古いので、互換性の面で不安もありました。</p>

<p>というわけで諦めて強引に修正することにしました。(今回は多少汚い手を使っても困るのは俺だけだし)</p>

<a name="L.................."></a>
<h1>問題点は何か</h1>

<p>そもそもの問題点は2つあります。</p>

<ol>
<li>rdiscountの出力するtocをクリーンなutf-8に変換できない。</li>
<li>rdiscountが出力する見出しのアンカータグのname属性が重複する可能性がある。</li>
</ol>


<p>前者はjekyllのコード修正後に発生したエラーの原因です。<code>force_encoding</code>するだけでは不十分でした。</p>

<p>ただ、後者のほうがより重要で、これがあるかぎり頑張って前者を解決してもダメです。
わかり易い例を示します。</p>

<p>``` ruby toc_test.rb
require &lsquo;rdiscount&rsquo;</p>

<p>rd = RDiscount.new(&lt;&lt;-EOF, :autolink, :footnotes, :smart, :generate_toc)</p>

<a name="L............"></a>
<h1>ヘッダ１</h1>

<p>本文1</p>

<a name="L............"></a>
<h2>ヘッダ２</h2>

<p>本文2
EOF</p>

<p>puts rd.to_html
```</p>

<p>``` bash
$ bundle exec ruby toc_test.rb
<a name="L............"></a></p>

<h1>ヘッダ１</h1>




<p>本文1</p>


<p><a name="L............"></a></p>

<h2>ヘッダ２</h2>




<p>本文2</p>


<p>```</p>

<p>ヘッダ１、ヘッダ２はname属性が同じになるようにあえて全角数字で書いています。</p>

<p>rdiscountに下記のようなコードがあるので、おそらく意図した動作なのでしょう。
ただ、アルファベット以外の見出しはすべて".&ldquo;に"mangle"されてしまうので、
日本語で見出しを書くとたまたま長さが同じになったときにリンクが重複します。</p>

<pre><code>// vendor/bundle/ruby/2.1.0/gems/rdiscount-2.0.7.3/ext/mkdio.c

/* write out a Cstring, mangled into a form suitable for `&lt;a href=` or `&lt;a id=`
 */
void
mkd_string_to_anchor(char *s, int len, mkd_sta_function_t outchar,
                                       void *out, int labelformat)
{
    unsigned char c;

    int i, size;
    char *line;

    size = mkd_line(s, len, &amp;line, IS_LABEL);

    if ( labelformat &amp;&amp; size &amp;&amp; !isalpha(line[0]) )
        (*outchar)('L',out);
    for ( i=0; i &lt; size ; i++ ) {
        c = line[i];
        if ( labelformat ) {
            if ( isalnum(c) || (c == '_') || (c == ':') || (c == '-') || (c == '.' ) )
                (*outchar)(c, out);
            else
                (*outchar)('.',out);
        }
        else
            (*outchar)(c,out);
    }

    if (line)
        free(line);
}
</code></pre>

<a name="L........."></a>
<h1>解決案</h1>

<p>以下の方法を取りました。</p>

<ul>
<li>jekyllを修正して、<code>RDiscount#toc_content</code>をブログ本文のドキュメントに挿入する前後でHTMLを書き換える。

<ul>
<li>本文のアンカータグのname属性を<code>section_#{n}</code>というフォーマットの連番に書き換える。</li>
<li><code>RDiscount#toc_content</code>のリンクを上記で書き換えたアンカーに置換する。</li>
</ul>
</li>
</ul>


<p>差分は下記のとおりです。Nokogiriを使ってます。
あと<code>RDiscount#toc_content</code>の不正なバイトを綺麗にするために<code>String#scrub</code>を使っているのでruby2.1系じゃないと動きません。</p>

<p><code>bash
$ cd vendor/github/jekyll
</code></p>

<p>``` diff
diff &mdash;git jekyll.gemspec jekyll.gemspec
index f88d073..e9a09b4 100644
&mdash;&ndash; jekyll.gemspec
+++ jekyll.gemspec
@@ -29,6 +29,7 @@ Gem::Specification.new do |s|
   s.add_runtime_dependency(&lsquo;maruku&rsquo;, &ldquo;~> 0.5&rdquo;)
   s.add_runtime_dependency(&lsquo;kramdown&rsquo;, &ldquo;~> 0.13.4&rdquo;)
   s.add_runtime_dependency(&lsquo;pygments.rb&rsquo;, &ldquo;~> 0.3.2&rdquo;)
+  s.add_runtime_dependency(&lsquo;nokogiri&rsquo;, &ldquo;~> 1.6.1&rdquo;)</p>

<p>   s.add_development_dependency(&lsquo;rake&rsquo;, &ldquo;~> 0.9&rdquo;)
   s.add_development_dependency(&lsquo;rdoc&rsquo;, &ldquo;~> 3.11&rdquo;)
diff &mdash;git lib/jekyll/converters/markdown.rb lib/jekyll/converters/markdown.rb
index 3c6ba53..31f0e9a 100644
&mdash;&ndash; lib/jekyll/converters/markdown.rb
+++ lib/jekyll/converters/markdown.rb
@@ -1,3 +1,5 @@
+require &lsquo;nokogiri&rsquo;
+
 module Jekyll</p>

<p>   class MarkdownConverter &lt; Converter
@@ -137,7 +139,15 @@ module Jekyll</p>

<pre><code>       rd = RDiscount.new(content, *@rdiscount_extensions)
       html = rd.to_html
       if rd.generate_toc and html.include?(@config['rdiscount']['toc_token'])
</code></pre>

<ul>
<li><pre><code>     html.gsub!(@config['rdiscount']['toc_token'], rd.toc_content)
</code></pre></li>
<li><pre><code>     doc = Nokogiri::HTML::DocumentFragment.parse(rd.to_html)
</code></pre></li>
<li><pre><code>     toc  = Nokogiri::HTML::DocumentFragment.parse(rd.toc_content.force_encoding("utf-8").scrub("."))
</code></pre></li>
<li><pre><code>     doc.css("a[name]").each_with_index{|elem, i| elem['name'] = "section_#{i}" }
</code></pre></li>
<li><pre><code>     anchors = doc.css("a[name]")
</code></pre></li>
<li><pre><code>     toc.css("a[href]").each_with_index{|elem, i|
</code></pre></li>
<li><pre><code>       elem["href"] = "#" + anchors[i]["name"]
</code></pre></li>
<li><pre><code>     }
</code></pre></li>
<li><pre><code>     html = doc.to_html
</code></pre></li>
<li><pre><code>     toc = html.gsub!(@config['rdiscount']['toc_token'], toc.to_html)
   end
   html
 when 'maruku'
</code></pre>

<p>```</p></li>
</ul>


<p>ここまでで見出し目次は出力されるようになりますが、アンカータグは<code>&lt;a href="#section_0"&gt;見出し１&lt;/a&gt;</code>のような相対パスでのリンクになります。</p>

<p>``` html</p>

<ul>
 <li><ul>
  <li><a href="#section_0">categories:</a></li>
 </ul></li>
 <li><a href="#section_1">見出し１</a></li>
 <li><ul>
  <li><a href="#section_2">見出し２</a></li>
  <li><a href="#section_3">見出し３</a></li>
 </ul></li>
</ul>




<p>見出し目次のテストです。</p>




<!-- more -->


<p><a name="section_1"></a></p>

<h1>見出し１</h1>


<p><a name="section_1"></a></p>

<h1>見出し１</h1>




<p>本文</p>


<p><a name="section_2"></a></p>

<h2>見出し２</h2>




<p>本文</p>


<p><a name="section_3"></a></p>

<h2>見出し３</h2>




<p>本文</p>


<p>```</p>

<p>そのため、投稿の単体ページでは意図したように動作しますが、投稿一覧ページに表示されていて、かつ参照先が<code>&lt;!-- more --&gt;</code>によって省略されているような場合には意図したように動作しません。</p>

<p>これを解決するためにプラグインを書きます。</p>

<p>``` ruby plugins/toc_linker.rb
require &lsquo;nokogiri&rsquo;</p>

<p>module Jekyll
  require_relative &lsquo;post_filters&rsquo;</p>

<p>  class TocLinker &lt; PostFilter</p>

<pre><code>def post_render(post)
  if post.is_post?
    doc = Nokogiri::HTML::DocumentFragment.parse(post.content)
    doc.css("a[href]").each do |elem|
      next if elem["href"] !~ /^#/
      elem["href"] = post.full_url + elem["href"]
    end
    post.content = doc.to_html
  end
end
</code></pre>

<p>  end
end
```</p>

<p>これにより、下記のようにアンカータグのリンク先を絶対パスに書き換えてしまいます。</p>

<p>``` html</p>

<ul>
 <li><ul>
  <li><a href="http://yoursite.com/blog/2014/06/16/octopress-toc/#section_0">categories:</a></li>
 </ul></li>
 <li><a href="http://yoursite.com/blog/2014/06/16/octopress-toc/#section_1">見出し１</a></li>
 <li><ul>
  <li><a href="http://yoursite.com/blog/2014/06/16/octopress-toc/#section_2">見出し２</a></li>
  <li><a href="http://yoursite.com/blog/2014/06/16/octopress-toc/#section_3">見出し３</a></li>
 </ul></li>
</ul>


<p>```</p>

<a name="L............"></a>
<h1>フィード</h1>

<p>ついでに出力されるフィードにも手を入れておきます。</p>

<p><code>&lt;!-- more --&gt;</code>で省略している箇所はフィードに含めず、<br/>
それよりも前に見出し目次がある場合はフィードに含めて、<br/>
見出し目次のリンク先は投稿本文になるようにします。</p>

<p>``` diff

diff &mdash;git source/atom.xml source/atom.xml
index 83af3f8..035a610 100644
&mdash;&ndash; source/atom.xml
+++ source/atom.xml
@@ -21,7 +21,13 @@ layout: nil</p>

<pre><code> &lt;link href="{{ site.url }}{{ post.url }}"/&gt;
 &lt;updated&gt;{{ post.date | date_to_xmlschema }}&lt;/updated&gt;
 &lt;id&gt;{{ site.url }}{{ post.id }}&lt;/id&gt;
</code></pre>

<ul>
<li> <content type="html">&lt;![CDATA[{{ post.content | expand_urls: site.url | cdata_escape }}]]&gt;</content></li>
<li> <content type="html">&lt;![CDATA[</li>
<li>   {{ post.content | excerpt | expand_urls: site.url | cdata_escape }}</li>
<li>   {% capture excerpted %}{{ post.content | has_excerpt }}{% endcapture %}</li>
<li>   {% if excerpted == &lsquo;true&rsquo; %}</li>
<li><pre><code> &lt;a rel="full-article" href="{{ site.url }}{{ root_url }}{{ post.url }}"&gt;{{ site.excerpt_link | cdata_escape }}&lt;/a&gt;
</code></pre></li>
<li>   {% endif %}</li>
<li> ]]&gt;</content>
</entry>
{% endfor %}
</feed>

```</li>
</ul>


<a name="L......"></a>
<h1>課題</h1>

<ul>
<li>見出し目次のリンクに対応する本文中のDOM要素をアンカータグのname属性だけでサーチしているため、それ以外のname属性付きアンカータグを含むような記事では誤動作します。</li>
<li>見出し目次のリンクが<code>bundle exec rake preview</code>でも絶対パスになります。</li>
<li>octopressの更新によってjekyllのバージョンが上がってしまった場合には再度対処が必要になる可能性があります。</li>
</ul>


<p>最初に書いたように筋悪な方法だと思ってるのでプルリクとかもしません。</p>

<p>もっとスマートな方法知ってる人いたらtwitterで教えて下さい。</p>

<p>追記：twitterで筋の良い方法を教えて頂きましたので、その紹介の記事を書きました。</p>

<p><a href="http://blog.chopschips.net/blog/2014/07/08/octopress-toc-improved/">Octopressで見出しの目次を作る方法 改 &ndash; 割り箸ポテチ</a></p>
]]></content>
  </entry>
  
</feed>
